apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release'

def cfg = rootProject.ext.configuration
def libs = rootProject.ext.libraries
def bintrayCfg = rootProject.ext.bintrayConfig

android {
    compileSdkVersion cfg.compileVersion
    buildToolsVersion cfg.buildToolsVersion

    defaultConfig {
        minSdkVersion cfg.minSdk
        targetSdkVersion cfg.targetSdk
        versionCode cfg.versionCode
        versionName cfg.versionName
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            outputs.upToDateWhen { false }
            showStandardStreams = true
        }
    }
}

dependencies {
    testImplementation "junit:junit:4.12"
    testImplementation "com.google.truth:truth:0.31"
    testImplementation "org.robolectric:robolectric:3.4.2"
    testImplementation "org.mockito:mockito-core:2.6.1"
    testImplementation "com.android.support.constraint:constraint-layout:${libs.constraintlayout}"
    testImplementation "com.android.support:transition:${libs.support}"
    testImplementation "com.android.support:support-v4:${libs.support}"

    compileOnly "com.android.support.constraint:constraint-layout:${libs.constraintlayout}"
    compileOnly "com.android.support:support-v4:${libs.support}"
    compileOnly "com.android.support:transition:${libs.support}"
}

publish {
    artifactId = bintrayCfg.artifact
    userOrg = bintrayCfg.userOrg
    groupId = bintrayCfg.groupId
    uploadName = bintrayCfg.name
    publishVersion = cfg.versionName
    desc = bintrayCfg.description
    website = bintrayCfg.website
    licences = bintrayCfg.licences
}